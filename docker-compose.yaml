version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672"  # Remove host port binding
      - "15672" # Management UI port
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  neo4j:
    image: neo4j:latest
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/gaiaadmin
      - NEO4JLABS_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.* # Allow all APOC procedures
      - NEO4J_dbms_security_procedures_allowlist=apoc.* # Allowlist APOC procedures
    volumes:
      - ./gaia/neo4j/data:/app/neo4j/data
      - ./gaia/neo4j/logs:/app/neo4j/logs
      - ./gaia/neo4j/plugins:/app/neo4j/plugins
      - ./gaia/neo4j/import:/var/lib/neo4j/import
    healthcheck:
      test: ["CMD", "neo4j", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  gaia:
    build:
      context: ./gaia
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      chunker:
        condition: service_started
      vector_db:
        condition: service_started
      graph_db:
        condition: service_started
      llm:
        condition: service_started
      prompt:
        condition: service_started
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    volumes:
      - ./gaia/data:/app/data
      - /var/run/docker.sock:/var/run/docker.sock:rw
    user: root

  chunker:
    build:
      context: ./chunker
      dockerfile: Dockerfile
    image: chunker
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    volumes:
      - ./chunker/data:/app/data

  vector_db:
    build:
      context: ./vector_db
      dockerfile: Dockerfile
    image: vector_db
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//

  graph_db:
    build:
      context: ./graph_db
      dockerfile: Dockerfile
    image: graph_db
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//

  llm:
    build:
      context: ./llm
      dockerfile: Dockerfile
    image: llm
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - huggingface_cache:/root/.cache/huggingface
      - shared_models:/app/models
    environment:
      - TRANSFORMERS_CACHE=/root/.cache/huggingface
      - MODEL_PATH=/app/models
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
  

  prompt:
    build:
      context: .
      dockerfile: prompt/Dockerfile
    image: prompt
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//

networks:
  gaia_network:
    driver: bridge

volumes:
  huggingface_cache:
    driver: local
  shared_models:
    driver: local
